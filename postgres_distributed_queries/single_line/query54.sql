WITH my_customers AS (SELECT DISTINCT c_customer_sk, c_current_addr_sk FROM (SELECT cs_sold_date_sk AS sold_date_sk, cs_bill_customer_sk AS customer_sk, cs_item_sk AS item_sk FROM postgres3.public.catalog_sales UNION ALL SELECT ws_sold_date_sk AS sold_date_sk, ws_bill_customer_sk AS customer_sk, ws_item_sk AS item_sk FROM postgres2.public.web_sales) AS cs_or_ws_sales, postgres3.public.item, postgres2.public.date_dim, postgres1.public.customer WHERE sold_date_sk = d_date_sk AND item_sk = i_item_sk AND i_category = 'Jewelry' AND i_class = 'consignment' AND c_customer_sk = cs_or_ws_sales.customer_sk AND d_moy = 3 AND d_year = 1999), my_revenue AS (SELECT c_customer_sk, SUM(ss_ext_sales_price) AS revenue FROM my_customers, postgres3.public.store_sales, postgres3.public.customer_address, postgres1.public.store, postgres3.public.date_dim WHERE c_current_addr_sk = ca_address_sk AND ca_county = s_county AND ca_state = s_state AND ss_sold_date_sk = d_date_sk AND c_customer_sk = ss_customer_sk AND d_month_seq BETWEEN (SELECT DISTINCT d_month_seq + 1 FROM postgres3.public.date_dim WHERE d_year = 1999 AND d_moy = 3) AND (SELECT DISTINCT d_month_seq + 3 FROM postgres1.public.date_dim WHERE d_year = 1999 AND d_moy = 3) GROUP BY c_customer_sk), segments AS (SELECT CAST((CAST(revenue AS DOUBLE) / 50) AS INTEGER) AS segment FROM my_revenue) SELECT segment, COUNT(*) AS num_customers, segment * 50 AS segment_base FROM segments GROUP BY segment ORDER BY segment NULLS FIRST, num_customers NULLS FIRST LIMIT 100